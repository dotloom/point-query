enum FeatureType {
  int8 = 1;                        // fixed size 1 byte number: -127~128
  uint8 = 2;                       // fixed size 1 byte number: 0~255
  int16 = 3;                       // fixed size 2 byte number: -32768~32768
  uint16 = 4;                      // fixed size 2 byte number: 0~255 + (0~255)<<16 => 0~65536
  int32 = 4;                       // fixed size 4 byte number: 0~255 + (0~255)<<16 + (0~255)<<24 + (0~256)<<32 -2147483648 => 2147483648~-2147483648
  uint32 = 5;                      // fixed size 4 byte number: 0~255 + (0~255)<<16 + (0~255)<<24 + (0~256)<<32 => 0~4294967296
  sint32 = 6;                      // fixed size 4 byte, reverse stored number: -2147483648~2147483648
  varint32 = 7;                    // variable size 2~5 byte number: [0~127 + (1bit] + [(0~127)<<7) + (1bit] + (0~127)<<14) + (1bit] + [0~127) + (1bit] + 0~15) => 2147483648~-2147483648
  varuint32 = 8;                   // variable size 2~5 byte, reverse stored number: 0~4294967296
  varsint32 = 9;                   // variable size 2~5 byte, reverse stored number: -2147483648~2147483648
  int64 = 10;                      // fixed size 8 byte number: -9223372036854776000~9223372036854776000
  uint64 = 11;                     // fixed size 8 byte number: 0~18446744073709552000
  sint64 = 12;                     // fixed size 8 byte, reverse stored number: 9223372036854776000~-9223372036854776000
  varuint64 = 14;                  // variable size 2~9 byte number: [0~127 + (1bit] + [(0~127)<<7) + (1bit] + (0~127)<<14) + (1bit] + [0~127) + (1bit] + 0~15) => 9223372036854776000~-9223372036854776000
  varint64 = 13;                   // variable size 2~9 byte number: 0~18446744073709552000
  varsint64 = 15;                  // variable size 2~9 byte, reverse stored number: -9223372036854776000~9223372036854776000
  bytes = 16;                      // variable size bytes: uint32-size-number + amount of bytes
  string = 17;                     // variable size string: utf-8 encoded bytes
  varbytes = 19;                   // variable size bytes with varsize length: varuint32-number + amount of bytes
  varstring = 20;                  // variable size string with varsize length: utf-8 encoded varbytes
  bool = 21;                       // 0 = false, 1~7 = true
  float = 22;                      // fixed size 4 byte floating point
  double = 23;                     // fixed size 8 byte floating point
  fixedstring = 24[(length) = -1]; // fixed amount of string
  fixedbytes = 25[(length) = -1];  // fixed amount of bytes
}
